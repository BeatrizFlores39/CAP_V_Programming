//5.1.2:CAP_ViteratorsAndRangers
#include<bits/stdc++.h>
using namespace std;

int main() {
    
    vector<int> v = {5, 2, 3, 1, 2, 5, 7, 1};

    
    cout << "Primer elemento: " << *v.begin() << endl; 
    cout << "Último elemento (después de end()): " << *(v.end() - 1) << endl; 
    
    sort(v.begin(), v.end()); 
    reverse(v.begin(), v.end()); 
    random_shuffle(v.begin(), v.end()); 

    
    vector<int> v2 = {2, 3, 3, 5, 7, 8, 8, 8};
    auto a = lower_bound(v2.begin(), v2.end(), 5); 
    auto b = upper_bound(v2.begin(), v2.end(), 5); 
    cout << *a << " " << *b << "\n"; // Salida: 5 7

   
    sort(v2.begin(), v2.end());
    v2.erase(unique(v2.begin(), v2.end()), v2.end()); 
    cout << "Vector sin duplicados: ";
    for (auto x : v2) {
        cout << x << " "; 
    }
    cout << endl;

    return 0;
}
